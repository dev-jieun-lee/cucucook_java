<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.example.cucucook.mapper.BoardMapper">
  <resultMap id="BoardResultMap" type="Board">
    <result property="memberId" column="member_id"/>
    <result property="boardId" column="board_id"/>
    <result property="boardDivision" column="board_division"/>
    <result property="title" column="title"/>
    <result property="contents" column="contents"/>
    <result property="boardCategoryId" column="board_category_id"/>
    <result property="regDt" column="reg_dt"/>
    <result property="udtDt" column="udt_dt"/>
    <result property="status" column="status"/>
    <result property="viewCount" column="view_count"/>
    <result property="pboardId" column="p_board_id"/>
  </resultMap>

  <resultMap id="CategoryResultMap" type="BoardCategory">
    <result property="boardCategoryId" column="board_category_id"/>
    <result property="name" column="name"/>
    <result property="division" column="division"/>
  </resultMap>

  <!-- 게시판 목록 조회-->
<select id="getBoardList" resultMap="BoardResultMap">
    SELECT board_id,
           member_id,
           board_category_id,
           board_division,
           title,
           status,
           view_count,
           p_board_id,
           contents,
           udt_dt,
           reg_dt,
           user_name
    FROM Board
    WHERE board_division = #{division}
    <if test="search != '' and search != null">
        <choose>
            <when test="searchType == 'title'">
                AND title LIKE CONCAT('%', #{search}, '%')
            </when>
            <when test="searchType == 'contents'">
                AND contents LIKE CONCAT('%', #{search}, '%')
            </when>
            <when test="searchType == 'all'">
                AND (title LIKE CONCAT('%', #{search}, '%') OR contents LIKE CONCAT('%', #{search}, '%'))
            </when>
        </choose>
    </if>
    <if test="boardCategoryId != '' and boardCategoryId != null and boardCategoryId != 'all'">
        AND board_category_id = #{boardCategoryId}
    </if>
    ORDER BY p_board_id, reg_dt DESC
</select>


<!-- 게시판 글 상세 조회 -->
<select id="getBoard" resultMap="BoardResultMap">
    SELECT board_id
          ,member_id
          ,board_category_id
          ,board_division
          ,title
          ,status
          ,view_count
          ,p_board_id
          ,contents
          ,udt_dt
          ,reg_dt
          ,user_name
    FROM Board
    WHERE board_id = #{boardId}
</select>

<!-- 게시판 글 답글 포함 상세 조회 -->
<select id="getBoardWithReplies" resultMap="BoardResultMap">
    SELECT board_id,
           member_id,
           board_category_id,
           board_division,
           title,
           status,
           view_count,
           p_board_id,
           contents,
           udt_dt,
           reg_dt,
           user_name
    FROM Board
    WHERE board_id = #{boardId}
       OR p_board_id = #{boardId}  
       OR board_id = (SELECT p_board_id FROM Board WHERE board_id = #{boardId}) 
    ORDER BY p_board_id, udt_dt ASC;
</select>

<!-- 게시판 조회수 증가 -->
<update id="updateViewCount">
    UPDATE Board
    SET view_count = view_count + 1
    WHERE board_id = #{boardId}
</update>

<!-- 게시판 글 삭제 -->
<delete id="deleteBoard">
    DELETE FROM board
    WHERE board_id = #{boardId}
</delete>


<!-- 게시글 등록 -->
<insert id="insertBoard" parameterType="Board">
    INSERT INTO Board (
        member_id,
        board_id,
        board_division,
        title,
        contents,
        board_category_id,
        reg_dt,
        udt_dt,
        status,
        user_name,
        p_board_id
    ) VALUES (
        #{board.memberId},
        #{board.boardId},
        #{board.boardDivision},
        #{board.title},
        #{board.contents},
        #{board.boardCategoryId},
        #{board.regDt},
        #{board.udtDt},
        #{board.status},
        #{board.userName},
        #{board.pboardId}
    )
</insert>

<!-- 게시글 수정 -->
<update id="updateBoard" parameterType="Board">
    UPDATE board
      SET 
        title = #{board.title},
        contents = #{board.contents},
        board_category_id = #{board.boardCategoryId},
        udt_dt = #{board.udtDt}
      WHERE board_id = #{board.boardId}
      AND member_id = #{board.memberId}  
</update>

<!-- 카테고리 조회 -->
<select id="getBoardCategoryList" resultMap="CategoryResultMap">
    SELECT board_category_id
          ,name
          ,division
          ,color
    FROM board_category
</select>

<!-- 카테고리 상세 조회 -->
<select id="getBoardCategory" resultMap="CategoryResultMap">
    SELECT board_category_id
          ,name
          ,division
          ,color
    FROM board_category
    WHERE board_category_id = #{boardCategoryId}
</select>

<!-- 카테고리 등록 -->
<insert id="insertBoardCategory" parameterType="BoardCategory">
    INSERT INTO board_category (
        board_category_id,
        name,
        division,
        color,
        reg_dt,
        udt_dt
    ) VALUES (
        #{boardCategory.boardCategoryId},
        #{boardCategory.name},
        #{boardCategory.division},
        #{boardCategory.color},
        #{boardCategory.regDt},
        #{boardCategory.udtDt}
    )
</insert>


</mapper>