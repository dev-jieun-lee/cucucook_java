<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.cucucook.mapper.MypageMapper">

    <!-- 회원이 쓴 글 갯수 -->
    <select id="getMemberBoardCount" resultType="int">
        SELECT COUNT(*)
        FROM board
        WHERE memberId = #{memberId}
    </select>

    <!-- 회원이 쓴 글 목록 -->
    <select id="getMemberBoardList" resultType="com.example.cucucook.domain.Board">
        SELECT *
        FROM board
        WHERE memberId = #{memberId}
        ORDER BY created_at DESC
        LIMIT #{start}, #{display}
    </select>

    <!-- 회원이 쓴 댓글 갯수 -->
    <select id="getRecipeCommentCount" resultType="int">
        SELECT COUNT(*)
        FROM recipe_comment
        WHERE memberId = #{memberId}
    </select>

    <!-- 회원이 쓴 댓글 목록 -->
    <select id="getRecipeCommentList" resultType="com.example.cucucook.domain.RecipeComment">
        SELECT *
        FROM recipe_comment
        WHERE memberId = #{memberId}
        ORDER BY created_at DESC
        LIMIT #{start}, #{display}
    </select>

    <!-- 회원이 찜한 레시피 갯수 -->
    <select id="getMemberRecipeLikeCount" resultType="int">
        SELECT COUNT(*)
        FROM recipe_like
        WHERE memberId = #{memberId}
    </select>

    <!-- 회원 레시피 찜 목록 -->
    <select id="getRecipeLikeList" resultType="com.example.cucucook.domain.RecipeLike">
        SELECT *
        FROM recipe_like
        WHERE memberId = #{memberId}
        ORDER BY created_at DESC
        LIMIT #{start}, #{display}
    </select>

    <!-- 회원 레시피 찜 보기 -->
    <select id="getRecipeLike" resultType="com.example.cucucook.domain.RecipeLike">
        SELECT *
        FROM recipe_like
        WHERE memberId = #{memberId}
        AND recipeId = #{recipeId}
    </select>

    <!-- 회원 레시피 찜 추가 -->
    <insert id="insertRecipeLike">
        INSERT INTO recipe_like (memberId, recipeId)
        VALUES (#{recipeLike.memberId}, #{recipeLike.recipeId})
    </insert>

    <!-- 회원 레시피 찜 삭제 -->
    <delete id="deleteRecipeLike">
        DELETE FROM recipe_like
        WHERE memberId = #{memberId}
        AND recipeId = #{recipeId}
    </delete>

<!-- 내가 쓴 댓글 조회 -->
<select id="getMyComments" resultType="com.example.cucucook.domain.RecipeComment">
    SELECT  mr.title as title, rc.*
    FROM recipe_comment rc
    LEFT JOIN member_recipe mr ON rc.recipe_id = mr.recipe_id
    WHERE rc.member_id = #{memberId}
    ORDER BY
    <choose>
        <when test="sortOption == 'recipeId'">
            rc.recipe_id DESC
        </when>
        <when test="sortOption == 'regDt'">
            rc.reg_dt DESC
        </when>
        <otherwise>
            rc.comment_id DESC
        </otherwise>
    </choose>
    LIMIT #{pageSize} OFFSET GREATEST(0, #{offset})
</select>


    <!-- 댓글 삭제 -->
    <delete id="deleteComment">
        DELETE FROM recipe_comment
        WHERE comment_id = #{commentId}
    </delete>

    <!-- 댓글 검색, PostgreSQL의 ILIKE를 사용하여 대소문자를 구분하지 않는 검색 수행 -->
    <select id="searchMyComments" resultType="com.example.cucucook.domain.RecipeComment">
        SELECT * FROM recipe_comment
        WHERE comment ILIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 특정 카테고리에 대한 댓글 필터링 -->
    <select id="filterMyComments" resultType="com.example.cucucook.domain.RecipeComment">
        SELECT * FROM recipe_comment
        WHERE category = #{category} AND member_id = #{memberId}
    </select>

</mapper>
