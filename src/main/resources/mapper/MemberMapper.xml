<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.cucucook.mapper.MemberMapper">

    <!-- 사용자 아이디를 기준으로 사용자를 조회 (암호화된 비밀번호 포함) -->
    <select id="findByUserId" parameterType="String" resultType="com.example.cucucook.domain.Member">
        SELECT * FROM member WHERE user_id = #{userId}
    </select>

    <!-- 사용자 핸드폰번호를 기준으로 사용자를 조회 (암호화된 비밀번호 포함) -->
    <select id="findByPhone" parameterType="String" resultType="com.example.cucucook.domain.Member">
        SELECT * FROM member WHERE phone = #{phone}
    </select>

    <!-- 회원 수 조회 -->
    <select id="getMemberCount" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM member
        WHERE name LIKE CONCAT('%', #{search}, '%')
    </select>

    <!-- 회원 목록 조회 -->
    <select id="getMemberList" parameterType="map" resultType="com.example.cucucook.domain.Member">
        SELECT *
        FROM member
        WHERE name LIKE CONCAT('%', #{search}, '%')
        ORDER BY member_id
        LIMIT #{start}, #{display}
    </select>

    <!-- 회원 보기 -->
    <select id="getMember" parameterType="int" resultType="com.example.cucucook.domain.Member">
        SELECT *
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <!-- 회원 등록 -->
    <insert id="insertMember" useGeneratedKeys="true" keyProperty="memberId" keyColumn="member_id">
        INSERT INTO member (user_id, password, name, phone, role, email, sms_noti, email_noti)
        VALUES (#{userId}, #{password}, #{name}, #{phone}, '1', #{email},false, false)
    </insert>

    <!-- 회원 수정 -->
    <update id="updateMember">
        UPDATE member
        SET password = #{password},
            name = #{name},
            phone = #{phone},
            role = #{role},
            email = #{email},
            sms_noti = #{smsNoti},
            email_noti = #{emailNoti}
        WHERE member_id = #{memberId}
    </update>

    <!-- 회원 삭제 -->
    <delete id="deleteMember">
        DELETE FROM member
        WHERE member_id = #{memberId}
    </delete>

    <!-- 비밀번호 변경 -->
    <update id="updateMemberPassword">
        UPDATE member
        SET password = #{password}
        WHERE member_id = #{memberId}
    </update>

    <!-- 아이디 중복 체크 -->
    <select id="existsByUserId" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
        FROM member
        WHERE user_id = #{userId}
    </select>

    <!-- 이메일 중복 체크 -->
    <select id="existsByEmail" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
        FROM member
        WHERE email = #{email}
    </select>

</mapper>
